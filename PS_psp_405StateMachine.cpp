/*----- PROTECTED REGION ID(PS_psp_405StateMachine.cpp) ENABLED START -----*/
static const char *RcsId = "$Id:  $";
//=============================================================================
//
// file :        PS_psp_405StateMachine.cpp
//
// description : State machine file for the PS_psp_405 class
//
// project :     GW_INSTEK PSP-405
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <PS_psp_405.h>

/*----- PROTECTED REGION END -----*/	//	PS_psp_405::PS_psp_405StateMachine.cpp

//================================================================
//  States  |  Description
//================================================================
//  ON      |  
//  OFF     |  
//  FAULT   |  


namespace PS_psp_405_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : PS_psp_405::is_volt_meas_allowed()
 *	Description : Execution allowed for volt_meas attribute
 */
//--------------------------------------------------------
bool PS_psp_405::is_volt_meas_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for volt_meas attribute in read access.
	/*----- PROTECTED REGION ID(PS_psp_405::volt_measStateAllowed_READ) ENABLED START -----*/

    return checkSocketState();
	/*----- PROTECTED REGION END -----*/	//	PS_psp_405::volt_measStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : PS_psp_405::is_curr_meas_allowed()
 *	Description : Execution allowed for curr_meas attribute
 */
//--------------------------------------------------------
bool PS_psp_405::is_curr_meas_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for curr_meas attribute in read access.
	/*----- PROTECTED REGION ID(PS_psp_405::curr_measStateAllowed_READ) ENABLED START -----*/
    return checkSocketState();
	/*----- PROTECTED REGION END -----*/	//	PS_psp_405::curr_measStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : PS_psp_405::is_volt_level_allowed()
 *	Description : Execution allowed for volt_level attribute
 */
//--------------------------------------------------------
bool PS_psp_405::is_volt_level_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for volt_level attribute in read access.
	/*----- PROTECTED REGION ID(PS_psp_405::volt_levelStateAllowed_READ) ENABLED START -----*/

    return checkSocketState();
	/*----- PROTECTED REGION END -----*/	//	PS_psp_405::volt_levelStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : PS_psp_405::is_curr_level_allowed()
 *	Description : Execution allowed for curr_level attribute
 */
//--------------------------------------------------------
bool PS_psp_405::is_curr_level_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for curr_level attribute in read access.
	/*----- PROTECTED REGION ID(PS_psp_405::curr_levelStateAllowed_READ) ENABLED START -----*/

    return checkSocketState();
	/*----- PROTECTED REGION END -----*/	//	PS_psp_405::curr_levelStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : PS_psp_405::is_relay_status_allowed()
 *	Description : Execution allowed for relay_status attribute
 */
//--------------------------------------------------------
bool PS_psp_405::is_relay_status_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for relay_status attribute in read access.
	/*----- PROTECTED REGION ID(PS_psp_405::relay_statusStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	PS_psp_405::relay_statusStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : PS_psp_405::is_remote_status_allowed()
 *	Description : Execution allowed for remote_status attribute
 */
//--------------------------------------------------------
bool PS_psp_405::is_remote_status_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for remote_status attribute in read access.
	/*----- PROTECTED REGION ID(PS_psp_405::remote_statusStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	PS_psp_405::remote_statusStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : PS_psp_405::is_lock_status_allowed()
 *	Description : Execution allowed for lock_status attribute
 */
//--------------------------------------------------------
bool PS_psp_405::is_lock_status_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for lock_status attribute in read access.
	/*----- PROTECTED REGION ID(PS_psp_405::lock_statusStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	PS_psp_405::lock_statusStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : PS_psp_405::is_temperature_status_allowed()
 *	Description : Execution allowed for temperature_status attribute
 */
//--------------------------------------------------------
bool PS_psp_405::is_temperature_status_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for temperature_status attribute in read access.
	/*----- PROTECTED REGION ID(PS_psp_405::temperature_statusStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	PS_psp_405::temperature_statusStateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : PS_psp_405::is_On_allowed()
 *	Description : Execution allowed for On attribute
 */
//--------------------------------------------------------
bool PS_psp_405::is_On_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for On command.
	/*----- PROTECTED REGION ID(PS_psp_405::OnStateAllowed) ENABLED START -----*/

    return checkSocketState();
	/*----- PROTECTED REGION END -----*/	//	PS_psp_405::OnStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : PS_psp_405::is_Off_allowed()
 *	Description : Execution allowed for Off attribute
 */
//--------------------------------------------------------
bool PS_psp_405::is_Off_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Off command.
	/*----- PROTECTED REGION ID(PS_psp_405::OffStateAllowed) ENABLED START -----*/

    return checkSocketState();
	/*----- PROTECTED REGION END -----*/	//	PS_psp_405::OffStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : PS_psp_405::is_UpdateAllTheStatusValues_allowed()
 *	Description : Execution allowed for UpdateAllTheStatusValues attribute
 */
//--------------------------------------------------------
bool PS_psp_405::is_UpdateAllTheStatusValues_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for UpdateAllTheStatusValues command.
	/*----- PROTECTED REGION ID(PS_psp_405::UpdateAllTheStatusValuesStateAllowed) ENABLED START -----*/

    return checkSocketState();
	/*----- PROTECTED REGION END -----*/	//	PS_psp_405::UpdateAllTheStatusValuesStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : PS_psp_405::is_SetVoltageLevel_allowed()
 *	Description : Execution allowed for SetVoltageLevel attribute
 */
//--------------------------------------------------------
bool PS_psp_405::is_SetVoltageLevel_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for SetVoltageLevel command.
	/*----- PROTECTED REGION ID(PS_psp_405::SetVoltageLevelStateAllowed) ENABLED START -----*/

    return checkSocketState();
	/*----- PROTECTED REGION END -----*/	//	PS_psp_405::SetVoltageLevelStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : PS_psp_405::is_SetCurrentLevel_allowed()
 *	Description : Execution allowed for SetCurrentLevel attribute
 */
//--------------------------------------------------------
bool PS_psp_405::is_SetCurrentLevel_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for SetCurrentLevel command.
	/*----- PROTECTED REGION ID(PS_psp_405::SetCurrentLevelStateAllowed) ENABLED START -----*/

    return checkSocketState();
	/*----- PROTECTED REGION END -----*/	//	PS_psp_405::SetCurrentLevelStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : PS_psp_405::is_SetMaximumVoltageLimit_allowed()
 *	Description : Execution allowed for SetMaximumVoltageLimit attribute
 */
//--------------------------------------------------------
bool PS_psp_405::is_SetMaximumVoltageLimit_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for SetMaximumVoltageLimit command.
	/*----- PROTECTED REGION ID(PS_psp_405::SetMaximumVoltageLimitStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	PS_psp_405::SetMaximumVoltageLimitStateAllowed
	return true;
}


/*----- PROTECTED REGION ID(PS_psp_405::PS_psp_405StateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	PS_psp_405::PS_psp_405StateAllowed.AdditionalMethods

}	//	End of namespace
